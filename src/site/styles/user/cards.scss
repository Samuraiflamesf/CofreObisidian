$color_1: var(--text-muted);
$color_2: var(--text-normal);
$background-color_1: var(--cards-background);
$background-color_2: var(--background-secondary);
$background-color_3: var(--background-modifier-hover);
$background-color_4: var(--text-muted);
$background-color_5: var(--text-faint);
$border-color_1: var(--background-modifier-border-hover);

/* MIT License | Copyright (c) Stephan Ango (@kepano) 

Cards snippet for Obsidian

author: @kepano
version: 3.0.1

Support my work:
https://github.com/sponsors/kepano

*/
/*
.cards,
.markdown-source-view.mod-cm6.cards {
.dataview.table-view-table > tbody > tr > td,
table.dataview tbody > tr > td {
	border-bottom: none;
	padding: 0!important;
	line-height: 1.2;
	width: calc(100% - var(--cards-padding));
	margin: 0 auto;
	overflow: visible !important;
	max-width: 100%;
	display: flex;
}
}*/
/* Block button */
/* ------------------- */
/* Sorting menu */
/* ------------------- */
/* Card lists */
/* ------------------- */
/* Helper classes */
body {
	--cards-min-width: 180px;
	--cards-max-width: 1fr;
	--cards-mobile-width: 120px;
	--cards-image-height: 400px;
	--cards-padding: 1.2em;
	--cards-image-fit: contain;
	--cards-background: transparent;
	--cards-border-width: 1px;
	--cards-aspect-ratio: auto;
	--cards-columns: repeat(auto-fit, minmax(var(--cards-min-width), var(--cards-max-width)));
}
.cards.table-100 {
	table.dataview {
		tbody {
			padding: 0.25rem 0.75rem;
		}
		thead {
			>tr {
				right: 0.75rem;
			}
			&:before {
				margin-right: 0.75rem;
			}
		}
	}
}
.table-100 {
	.cards {
		table.dataview {
			tbody {
				padding: 0.25rem 0.75rem;
			}
			thead {
				>tr {
					right: 0.75rem;
				}
				&:before {
					margin-right: 0.75rem;
				}
			}
		}
	}
}
.cards {
	table.dataview {
		--table-width: 100%;
		--table-edge-cell-padding-first: calc(var(--cards-padding)/2);
		--table-edge-cell-padding-last: calc(var(--cards-padding)/2);
		--table-cell-padding: calc(var(--cards-padding)/3) calc(var(--cards-padding)/2);
		line-height: 1.3;
		tbody {
			clear: both;
			padding: 0.5rem 0;
			display: grid;
			grid-template-columns: var(--cards-columns);
			grid-column-gap: 0.75rem;
			grid-row-gap: 0.75rem;
			>tr {
				>td {
					&:first-child {
						font-weight: var(--bold-weight);
						border: none;
						a {
							display: block;
						}
					}
					&:last-child {
						border: none;
						>button {
							margin-bottom: calc(var(--cards-padding)/6);
						}
					}
					&:not(:first-child) {
						font-size: calc(var(--table-text-size) * .9);
						color: $color_1;
					}
					>* {
						padding: calc(var(--cards-padding)/3) 0;
					}
					&:not(:last-child) {
						&:not(:first-child) {
							padding: 4px 0;
							border-bottom: 1px solid var(--background-modifier-border);
							width: calc(100% - var(--cards-padding));
							margin: 0 calc(var(--cards-padding)/2);
						}
					}
					a {
						text-decoration: none;
					}
					>button {
						width: 100%;
						margin: calc(var(--cards-padding)/2) 0;
					}
					>ul {
						width: 100%;
						padding: 0.25em 0 !important;
						margin: 0 auto !important;
					}
					&:has(img) {
						padding: 0 !important;
						background-color: $background-color_2;
						display: block;
						margin: 0;
						width: 100%;
					}
					img {
						aspect-ratio: var(--cards-aspect-ratio);
						width: 100%;
						object-fit: var(--cards-image-fit);
						max-height: var(--cards-image-height);
						background-color: $background-color_2;
						vertical-align: bottom;
					}
				}
			}
		}
		>tbody {
			>tr {
				background-color: $background-color_1;
				border: var(--cards-border-width) solid var(--background-modifier-border);
				display: flex;
				flex-direction: column;
				margin: 0;
				padding: 0 0 calc(var(--cards-padding)/3) 0;
				border-radius: 6px;
				overflow: hidden;
				transition: box-shadow 0.15s linear;
				max-width: var(--cards-max-width);
				height: auto;
				&:hover {
					border: var(--cards-border-width) solid var(--background-modifier-border-hover);
					box-shadow: 0 4px 6px 0px rgba(0, 0, 0, 0.05), 0 1px 3px 1px rgba(0, 0, 0, 0.025);
					transition: box-shadow 0.15s linear;
				}
			}
		}
		thead {
			user-select: none;
			width: 180px;
			display: block;
			float: right;
			position: relative;
			text-align: right;
			height: 24px;
			padding-bottom: 0px;
			&:hover {
				&:after {
					background-color: $background-color_3;
				}
				&:before {
					background-color: $background-color_4;
				}
				>tr {
					display: flex;
					height: auto;
				}
			}
			&:after {
				content: '';
				position: absolute;
				right: 0;
				top: 0;
				width: 10px;
				height: 16px;
				cursor: var(--cursor);
				text-align: right;
				padding: var(--size-4-1) var(--size-4-2);
				margin-bottom: 2px;
				border-radius: var(--radius-s);
				font-weight: 500;
				font-size: var(--font-adaptive-small);
			}
			&:before {
				content: '';
				position: absolute;
				right: 0;
				top: 0;
				width: 10px;
				height: 16px;
				cursor: var(--cursor);
				text-align: right;
				padding: var(--size-4-1) var(--size-4-2);
				margin-bottom: 2px;
				border-radius: var(--radius-s);
				font-weight: 500;
				font-size: var(--font-adaptive-small);
				background-color: $background-color_5;
				-webkit-mask-repeat: no-repeat;
				-webkit-mask-size: 16px;
				-webkit-mask-position: center center;
				-webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 100 100"><path fill="currentColor" d="M49.792 33.125l-5.892 5.892L33.333 28.45V83.333H25V28.45L14.438 39.017L8.542 33.125L29.167 12.5l20.625 20.625zm41.667 33.75L70.833 87.5l-20.625 -20.625l5.892 -5.892l10.571 10.567L66.667 16.667h8.333v54.883l10.567 -10.567l5.892 5.892z"></path></svg>');
			}
			>tr {
				top: -1px;
				position: absolute;
				display: none;
				z-index: 9;
				border: 1px solid var(--background-modifier-border-hover);
				background-color: $background-color_2;
				box-shadow: var(--shadow-s);
				padding: 6px;
				border-radius: var(--radius-m);
				flex-direction: column;
				margin: 24px 0 0 0;
				width: 100%;
				>th {
					display: block;
					padding: 3px 30px 3px 6px !important;
					border-radius: var(--radius-s);
					width: 100%;
					font-weight: 400;
					color: $color_2;
					cursor: var(--cursor);
					border: none;
					font-size: var(--font-ui-small);
					&:hover {
						color: $color_2;
						background-color: $background-color_3;
					}
				}
				>th[sortable-style="sortable-asc"] {
					color: $color_2;
				}
				>th[sortable-style="sortable-desc"] {
					color: $color_2;
				}
			}
		}
	}
}
.markdown-source-view.mod-cm6.cards {
	.dataview.table-view-table {
		>tbody {
			>tr {
				>td {
					white-space: normal;
				}
			}
		}
	}
	.edit-block-button {
		top: -1px;
		right: 28px;
		opacity: 1;
	}
}
.trim-cols {
	.cards {
		table.dataview {
			tbody {
				>tr {
					>td {
						white-space: normal;
					}
				}
			}
		}
	}
}
.links-int-on {
	.cards {
		table {
			--link-decoration: none;
		}
	}
}
.list-cards.markdown-preview-view {
	.list-bullet {
		display: none;
	}
	.list-collapse-indicator {
		display: none;
	}
	div {
		>ul {
			display: grid;
			gap: 0.75rem;
			grid-template-columns: var(--cards-columns);
			padding: 0;
			line-height: var(--line-height-tight);
			>li {
				background-color: $background-color_1;
				padding: calc(var(--cards-padding)/2);
				border-radius: var(--radius-s);
				border: var(--cards-border-width) solid var(--background-modifier-border);
				overflow: hidden;
				>a {
					--link-decoration: none;
					--link-external-decoration: none;
					font-weight: var(--bold-weight);
				}
			}
			.image-embed {
				padding: 0;
				display: block;
				background-color: $background-color_2;
				border-radius: var(--image-radius);
				img {
					aspect-ratio: var(--cards-aspect-ratio);
					object-fit: var(--cards-image-fit);
					max-height: var(--cards-image-height);
					background-color: $background-color_2;
					vertical-align: bottom;
				}
			}
		}
		ul {
			>li {
				&:hover {
					border-color: $border-color_1;
				}
			}
			ul {
				display: block;
				width: 100%;
				color: $color_1;
				font-size: var(--font-smallest);
				margin: calc(var(--cards-padding)/-4) 0;
				padding: calc(var(--cards-padding)/2) 0;
				ul {
					padding-bottom: calc(var(--cards-padding)/4);
				}
				>li {
					display: block;
				}
			}
		}
	}
}
.list-cards.markdown-preview-view.markdown-rendered.show-indentation-guide {
	li {
		>ul {
			&::before {
				display: none;
			}
		}
	}
}
.cards.cards-16-9 {
	--cards-aspect-ratio: 16/9;
}
.list-cards.cards-16-9 {
	--cards-aspect-ratio: 16/9;
}
.cards.cards-1-1 {
	--cards-aspect-ratio: 1/1;
}
.list-cards.cards-1-1 {
	--cards-aspect-ratio: 1/1;
}
.cards.cards-2-1 {
	--cards-aspect-ratio: 2/1;
}
.list-cards.cards-2-1 {
	--cards-aspect-ratio: 2/1;
}
.cards.cards-2-3 {
	--cards-aspect-ratio: 2/3;
}
.list-cards.cards-2-3 {
	--cards-aspect-ratio: 2/3;
}
.cards.cards-cols-1 {
	--cards-columns: repeat(1, minmax(0, 1fr));
}
.list-cards.cards-cols-1 {
	--cards-columns: repeat(1, minmax(0, 1fr));
}
.cards.cards-cols-2 {
	--cards-columns: repeat(2, minmax(0, 1fr));
}
.list-cards.cards-cols-2 {
	--cards-columns: repeat(2, minmax(0, 1fr));
}
.cards.cards-cover {
	--cards-image-fit: cover;
}
.list-cards.cards-cover {
	--cards-image-fit: cover;
}
.cards.cards-align-bottom {
	table.dataview {
		tbody {
			>tr {
				>td {
					&:last-child {
						margin-top: auto;
					}
				}
			}
		}
	}
}
.list-cards.cards-align-bottom {
	table.dataview {
		tbody {
			>tr {
				>td {
					&:last-child {
						margin-top: auto;
					}
				}
			}
		}
	}
}
@media (max-width: 400pt) {
	body {
		--cards-min-width: var(--cards-mobile-width);
	}
	.cards {
		table.dataview {
			tbody {
				>tr {
					>td {
						&:not(:first-child) {
							font-size: 80%;
						}
					}
				}
			}
		}
	}
}
@media (min-width: 400pt) {
	.cards-cols-3 {
		--cards-columns: repeat(3, minmax(0, 1fr));
	}
	.cards-cols-4 {
		--cards-columns: repeat(4, minmax(0, 1fr));
	}
	.cards-cols-5 {
		--cards-columns: repeat(5, minmax(0, 1fr));
	}
	.cards-cols-6 {
		--cards-columns: repeat(6, minmax(0, 1fr));
	}
	.cards-cols-7 {
		--cards-columns: repeat(7, minmax(0, 1fr));
	}
	.cards-cols-8 {
		--cards-columns: repeat(8, minmax(0, 1fr));
	}
}
